/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LibraryManagement;

import static com.sun.corba.se.impl.util.Utility.printStackTrace;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import static java.lang.System.in;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Time;
import java.time.Clock;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import static org.apache.poi.hssf.usermodel.HeaderFooter.file;
import org.apache.xmlbeans.impl.xb.ltgfmt.TestCase.Files;
import static sun.util.calendar.CalendarUtils.mod;

/**
 *
 * @author user
 */
public class Librarianpage extends javax.swing.JFrame {
    int userid;
    int serialno;
    static int filterOnOff=0;
    
    private static Map<String,String> statusKeyMap = new HashMap<>();
    
    /**
     * Creates new form Librarianpage
     */
    public Librarianpage() {
        setTitle("Library Management");
        initComponents();
        //createRequestTableData(-99);
        btnrenew.setVisible(false);
        btnaccept.setVisible(false);
        btnreturn.setVisible(false);
        btnreloaddata.setVisible(false);
        
        setStatusKeyMap();
        

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filterDialogBox = new javax.swing.JDialog();
        dateChooserFrom = new datechooser.beans.DateChooserCombo();
        jLabel10 = new javax.swing.JLabel();
        btnCancelFilter = new javax.swing.JButton();
        dateChooserTo = new datechooser.beans.DateChooserCombo();
        jLabel19 = new javax.swing.JLabel();
        btnApplyFilter = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        labelDateChooserMessage = new javax.swing.JLabel();
        fileChooser = new javax.swing.JFileChooser();
        fileChooserGetter = new javax.swing.JFileChooser();
        dateChooserDialog1 = new datechooser.beans.DateChooserDialog();
        mainPanel = new javax.swing.JPanel();
        panelcontol = new javax.swing.JPanel();
        btnadduser = new javax.swing.JButton();
        btnviewusers = new javax.swing.JButton();
        btnaddbook = new javax.swing.JButton();
        btnchangepwd = new javax.swing.JButton();
        btnviewbook = new javax.swing.JButton();
        btnbookreq = new javax.swing.JButton();
        btnlogout = new javax.swing.JButton();
        btnFineStatement = new javax.swing.JButton();
        panelcenter = new javax.swing.JPanel();
        paneladduser = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tffullname = new javax.swing.JTextField();
        rbmale = new javax.swing.JRadioButton();
        rbfemale = new javax.swing.JRadioButton();
        rbothers = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tfaddress = new javax.swing.JTextArea();
        tfphno = new javax.swing.JTextField();
        tfemail = new javax.swing.JTextField();
        btnsubmit = new javax.swing.JButton();
        btnreset = new javax.swing.JButton();
        labelnotif = new javax.swing.JLabel();
        dcDOB = new datechooser.beans.DateChooserCombo();
        labelCreateUserSubmitMesssage = new javax.swing.JLabel();
        panelviewusers = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblviewuser = new javax.swing.JTable();
        btnsearch = new javax.swing.JButton();
        tfsearchuser = new javax.swing.JTextField();
        btndeleteuser = new javax.swing.JButton();
        btnedituser = new javax.swing.JButton();
        panelviewbook = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblbookdetails = new javax.swing.JTable();
        btnsearchbook = new javax.swing.JButton();
        btndeletebook = new javax.swing.JButton();
        tfsearchbook = new javax.swing.JTextField();
        btneditbook = new javax.swing.JButton();
        btnreloaddata = new javax.swing.JButton();
        panelchangepwd = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        pfnewpwd = new javax.swing.JPasswordField();
        pfconfirmpwd = new javax.swing.JPasswordField();
        btnchangepwdsubmit = new javax.swing.JButton();
        labelmessge = new javax.swing.JLabel();
        paneladdbook = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tfisbn = new javax.swing.JTextField();
        tfbookname = new javax.swing.JTextField();
        tfpublisher = new javax.swing.JTextField();
        tfyear = new javax.swing.JTextField();
        tfauthor = new javax.swing.JTextField();
        btnsubmitbook = new javax.swing.JButton();
        btnresetbook = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel29 = new javax.swing.JLabel();
        btnChooseFile = new javax.swing.JButton();
        labelChoosedFileName = new javax.swing.JLabel();
        btnSampleFile = new javax.swing.JButton();
        btnCancelFile = new javax.swing.JButton();
        btnUploadFile = new javax.swing.JButton();
        labelUploadMessage = new javax.swing.JLabel();
        panelbookreq = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        btnreqsearchuserid = new javax.swing.JButton();
        tfsearchuserbook = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblreqbook = new javax.swing.JTable();
        cbfilter = new javax.swing.JComboBox<>();
        btnrenew = new javax.swing.JButton();
        btnreturn = new javax.swing.JButton();
        btnaccept = new javax.swing.JButton();
        btnAdvancedFilter = new javax.swing.JButton();
        labelUserIdCheckMessage = new javax.swing.JLabel();
        paneledituser = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        labelfullname = new javax.swing.JLabel();
        labeldob = new javax.swing.JLabel();
        labeladdress = new javax.swing.JLabel();
        labelgender = new javax.swing.JLabel();
        labelphno = new javax.swing.JLabel();
        labelemail = new javax.swing.JLabel();
        tffullname1 = new javax.swing.JTextField();
        tfdob1 = new javax.swing.JTextField();
        rbmale1 = new javax.swing.JRadioButton();
        rbfemale1 = new javax.swing.JRadioButton();
        rbothers1 = new javax.swing.JRadioButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tfaddress1 = new javax.swing.JTextArea();
        tfphno1 = new javax.swing.JTextField();
        tfemail1 = new javax.swing.JTextField();
        btnupdate = new javax.swing.JButton();
        labelnotif1 = new javax.swing.JLabel();
        btnexit = new javax.swing.JButton();
        paneleditbookdeatls = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        labelfullname1 = new javax.swing.JLabel();
        labeldob1 = new javax.swing.JLabel();
        labelgender1 = new javax.swing.JLabel();
        labelemail1 = new javax.swing.JLabel();
        tfeditisbn = new javax.swing.JTextField();
        tfeditbookname = new javax.swing.JTextField();
        tfeditauthor = new javax.swing.JTextField();
        tfeditpublisher = new javax.swing.JTextField();
        btnbookupdate = new javax.swing.JButton();
        labelnotif2 = new javax.swing.JLabel();
        labelemail2 = new javax.swing.JLabel();
        tfedityear = new javax.swing.JTextField();
        btneditexit = new javax.swing.JButton();
        panelFineStatement = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblFineStatement = new javax.swing.JTable();
        dcReturndateFrom = new datechooser.beans.DateChooserCombo();
        tfSearchFinePaidUserid = new javax.swing.JTextField();
        dcReturndateTo = new datechooser.beans.DateChooserCombo();
        btnSearchFineStatement = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        labelExportMessage = new javax.swing.JLabel();

        filterDialogBox.addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                filterDialogBoxWindowLostFocus(evt);
            }
        });
        filterDialogBox.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                filterDialogBoxWindowActivated(evt);
            }
        });

        dateChooserFrom.setCurrentView(new datechooser.view.appearance.AppearancesList("Grey",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    try {
        dateChooserFrom.setDefaultPeriods(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar(2020, 0, 1),
            new java.util.GregorianCalendar(2020, 0, 1))));
} catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
    e1.printStackTrace();
    }
    dateChooserFrom.setCurrentNavigateIndex(0);

    jLabel10.setText("From");

    btnCancelFilter.setText("Cancel");
    btnCancelFilter.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnCancelFilterActionPerformed(evt);
        }
    });

    dateChooserTo.setCurrentView(new datechooser.view.appearance.AppearancesList("Grey",
        new datechooser.view.appearance.ViewAppearance("custom",
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                true,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 255),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(128, 128, 128),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(255, 0, 0),
                false,
                false,
                new datechooser.view.appearance.swing.ButtonPainter()),
            (datechooser.view.BackRenderer)null,
            false,
            true)));

jLabel19.setText("To");

btnApplyFilter.setText("Apply");
btnApplyFilter.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnApplyFilterActionPerformed(evt);
    }
    });

    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Valid From", "Valid To", "Return Date" }));
    jComboBox1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox1ActionPerformed(evt);
        }
    });

    jLabel24.setText("Field");

    javax.swing.GroupLayout filterDialogBoxLayout = new javax.swing.GroupLayout(filterDialogBox.getContentPane());
    filterDialogBox.getContentPane().setLayout(filterDialogBoxLayout);
    filterDialogBoxLayout.setHorizontalGroup(
        filterDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(filterDialogBoxLayout.createSequentialGroup()
            .addGap(83, 83, 83)
            .addGroup(filterDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(filterDialogBoxLayout.createSequentialGroup()
                    .addComponent(jLabel10)
                    .addGap(50, 50, 50)
                    .addComponent(dateChooserFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(filterDialogBoxLayout.createSequentialGroup()
                    .addGroup(filterDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel19)
                        .addComponent(jLabel24))
                    .addGap(52, 52, 52)
                    .addGroup(filterDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelDateChooserMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dateChooserTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(filterDialogBoxLayout.createSequentialGroup()
                    .addComponent(btnCancelFilter)
                    .addGap(54, 54, 54)
                    .addComponent(btnApplyFilter)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    filterDialogBoxLayout.setVerticalGroup(
        filterDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(filterDialogBoxLayout.createSequentialGroup()
            .addGap(45, 45, 45)
            .addGroup(filterDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(filterDialogBoxLayout.createSequentialGroup()
                    .addComponent(jLabel10)
                    .addGap(42, 42, 42))
                .addGroup(filterDialogBoxLayout.createSequentialGroup()
                    .addComponent(dateChooserFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(5, 5, 5)
                    .addComponent(labelDateChooserMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
            .addGroup(filterDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel19)
                .addComponent(dateChooserTo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(17, 17, 17)
            .addGroup(filterDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel24)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(42, 42, 42)
            .addGroup(filterDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnApplyFilter)
                .addComponent(btnCancelFilter))
            .addContainerGap(56, Short.MAX_VALUE))
    );

    fileChooser.setAcceptAllFileFilterUsed(false);
    fileChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
    fileChooser.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            fileChooserActionPerformed(evt);
        }
    });

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Library Management");
    setName("Library Management\n"); // NOI18N
    addWindowFocusListener(new java.awt.event.WindowFocusListener() {
        public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            formWindowGainedFocus(evt);
        }
        public void windowLostFocus(java.awt.event.WindowEvent evt) {
        }
    });

    mainPanel.setLayout(new java.awt.BorderLayout());

    panelcontol.setBackground(new java.awt.Color(204, 204, 204));
    panelcontol.setForeground(new java.awt.Color(16, 106, 120));

    btnadduser.setText("Add User");
    btnadduser.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnadduserActionPerformed(evt);
        }
    });

    btnviewusers.setText("View Users");
    btnviewusers.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnviewusersActionPerformed(evt);
        }
    });

    btnaddbook.setText("Add Book");
    btnaddbook.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnaddbookActionPerformed(evt);
        }
    });

    btnchangepwd.setText("Change Password");
    btnchangepwd.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnchangepwdActionPerformed(evt);
        }
    });

    btnviewbook.setText("View Book");
    btnviewbook.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnviewbookActionPerformed(evt);
        }
    });

    btnbookreq.setText("Book Requests");
    btnbookreq.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnbookreqActionPerformed(evt);
        }
    });

    btnlogout.setBackground(new java.awt.Color(35, 142, 219));
    btnlogout.setText("Log Out");
    btnlogout.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnlogoutActionPerformed(evt);
        }
    });

    btnFineStatement.setText("Fine Statement");
    btnFineStatement.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnFineStatementActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout panelcontolLayout = new javax.swing.GroupLayout(panelcontol);
    panelcontol.setLayout(panelcontolLayout);
    panelcontolLayout.setHorizontalGroup(
        panelcontolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(btnadduser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(btnviewusers, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
        .addComponent(btnaddbook, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
        .addComponent(btnviewbook, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
        .addComponent(btnbookreq, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
        .addGroup(panelcontolLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(panelcontolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(btnchangepwd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnlogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        .addComponent(btnFineStatement, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
    );
    panelcontolLayout.setVerticalGroup(
        panelcontolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelcontolLayout.createSequentialGroup()
            .addGap(71, 71, 71)
            .addComponent(btnadduser, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(btnviewusers, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(27, 27, 27)
            .addComponent(btnaddbook, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnviewbook, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnbookreq, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnFineStatement, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(77, 77, 77)
            .addComponent(btnchangepwd, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(32, 32, 32)
            .addComponent(btnlogout, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(42, Short.MAX_VALUE))
    );

    mainPanel.add(panelcontol, java.awt.BorderLayout.LINE_START);

    panelcenter.setBackground(new java.awt.Color(254, 254, 254));
    panelcenter.setLayout(new java.awt.CardLayout());

    paneladduser.setBackground(new java.awt.Color(254, 254, 254));

    jLabel1.setFont(new java.awt.Font("Courier 10 Pitch", 0, 36)); // NOI18N
    jLabel1.setText("Create User");

    jLabel2.setText("Full Name");

    jLabel3.setText("Date of Birth");

    jLabel4.setText("Address");

    jLabel5.setText("Gender");

    jLabel6.setText("Phone No.");

    jLabel7.setText("Email");

    tffullname.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            tffullnameActionPerformed(evt);
        }
    });

    rbmale.setText("Male");

    rbfemale.setText("Female");

    rbothers.setText("Others");

    tfaddress.setColumns(20);
    tfaddress.setRows(5);
    jScrollPane1.setViewportView(tfaddress);

    btnsubmit.setText("Submit");
    btnsubmit.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnsubmitActionPerformed(evt);
        }
    });

    btnreset.setText("Reset");
    btnreset.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnresetActionPerformed(evt);
        }
    });

    labelnotif.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

    dcDOB.setCurrentView(new datechooser.view.appearance.AppearancesList("Light",
        new datechooser.view.appearance.ViewAppearance("custom",
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                true,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 255),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(128, 128, 128),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(255, 0, 0),
                false,
                false,
                new datechooser.view.appearance.swing.ButtonPainter()),
            (datechooser.view.BackRenderer)null,
            false,
            true)));
dcDOB.setFormat(1);

labelCreateUserSubmitMesssage.setText("     ");

javax.swing.GroupLayout paneladduserLayout = new javax.swing.GroupLayout(paneladduser);
paneladduser.setLayout(paneladduserLayout);
paneladduserLayout.setHorizontalGroup(
    paneladduserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(paneladduserLayout.createSequentialGroup()
        .addGroup(paneladduserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneladduserLayout.createSequentialGroup()
                .addGap(281, 281, 281)
                .addGroup(paneladduserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7))
                .addGap(55, 55, 55)
                .addGroup(paneladduserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneladduserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tfemail, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tffullname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfphno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, paneladduserLayout.createSequentialGroup()
                            .addGroup(paneladduserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(dcDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(paneladduserLayout.createSequentialGroup()
                                    .addComponent(rbmale)
                                    .addGap(18, 18, 18)
                                    .addComponent(rbfemale)))
                            .addGap(18, 18, 18)
                            .addComponent(rbothers)))
                    .addGroup(paneladduserLayout.createSequentialGroup()
                        .addComponent(btnreset, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(btnsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(paneladduserLayout.createSequentialGroup()
                .addGap(373, 373, 373)
                .addComponent(jLabel1)))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneladduserLayout.createSequentialGroup()
        .addGap(0, 0, Short.MAX_VALUE)
        .addGroup(paneladduserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneladduserLayout.createSequentialGroup()
                .addComponent(labelnotif, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneladduserLayout.createSequentialGroup()
                .addComponent(labelCreateUserSubmitMesssage, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(186, 186, 186))))
    );
    paneladduserLayout.setVerticalGroup(
        paneladduserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(paneladduserLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1)
            .addGap(57, 57, 57)
            .addGroup(paneladduserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(tffullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(28, 28, 28)
            .addGroup(paneladduserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel5)
                .addComponent(rbfemale)
                .addComponent(rbothers)
                .addComponent(rbmale))
            .addGroup(paneladduserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneladduserLayout.createSequentialGroup()
                    .addGap(24, 24, 24)
                    .addComponent(jLabel3)
                    .addGap(18, 18, 18)
                    .addComponent(jLabel4))
                .addGroup(paneladduserLayout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(dcDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(22, 22, 22)
            .addGroup(paneladduserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tfphno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel6))
            .addGap(22, 22, 22)
            .addGroup(paneladduserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tfemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel7))
            .addGap(41, 41, 41)
            .addGroup(paneladduserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnreset)
                .addComponent(btnsubmit))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(labelCreateUserSubmitMesssage)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
            .addComponent(labelnotif, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    panelcenter.add(paneladduser, "card2");

    panelviewusers.setBackground(new java.awt.Color(254, 254, 254));

    jLabel9.setFont(new java.awt.Font("Comic Sans MS", 0, 36)); // NOI18N
    jLabel9.setText("Users");

    tblviewuser.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    ));
    jScrollPane2.setViewportView(tblviewuser);

    btnsearch.setText("Search");
    btnsearch.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnsearchActionPerformed(evt);
        }
    });

    tfsearchuser.setText("Enter the User ID or Name");
    tfsearchuser.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            tfsearchuserFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            tfsearchuserFocusLost(evt);
        }
    });
    tfsearchuser.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            tfsearchuserActionPerformed(evt);
        }
    });

    btndeleteuser.setBackground(new java.awt.Color(246, 90, 90));
    btndeleteuser.setText("Delete");
    btndeleteuser.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btndeleteuserActionPerformed(evt);
        }
    });

    btnedituser.setText("Edit ");
    btnedituser.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnedituserActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout panelviewusersLayout = new javax.swing.GroupLayout(panelviewusers);
    panelviewusers.setLayout(panelviewusersLayout);
    panelviewusersLayout.setHorizontalGroup(
        panelviewusersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelviewusersLayout.createSequentialGroup()
            .addGap(181, 181, 181)
            .addGroup(panelviewusersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tfsearchuser, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panelviewusersLayout.createSequentialGroup()
                    .addGap(252, 252, 252)
                    .addComponent(btnsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 225, Short.MAX_VALUE)
            .addComponent(btnedituser, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btndeleteuser)
            .addGap(40, 40, 40))
        .addGroup(panelviewusersLayout.createSequentialGroup()
            .addGap(385, 385, 385)
            .addComponent(jLabel9)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(panelviewusersLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane2)
            .addContainerGap())
    );
    panelviewusersLayout.setVerticalGroup(
        panelviewusersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelviewusersLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel9)
            .addGap(57, 57, 57)
            .addGroup(panelviewusersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnsearch)
                .addComponent(tfsearchuser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btndeleteuser)
                .addComponent(btnedituser))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(68, Short.MAX_VALUE))
    );

    panelcenter.add(panelviewusers, "card3");

    panelviewbook.setBackground(new java.awt.Color(255, 255, 255));

    jLabel16.setFont(new java.awt.Font("Courier 10 Pitch", 0, 36)); // NOI18N
    jLabel16.setText("View Book Details");

    tblbookdetails.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    ));
    jScrollPane3.setViewportView(tblbookdetails);

    btnsearchbook.setText("Search Book");
    btnsearchbook.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnsearchbookActionPerformed(evt);
        }
    });

    btndeletebook.setBackground(new java.awt.Color(228, 73, 53));
    btndeletebook.setText("Delete Book");
    btndeletebook.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btndeletebookActionPerformed(evt);
        }
    });

    tfsearchbook.setText("Enter the Book Name");
    tfsearchbook.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            tfsearchbookFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            tfsearchbookFocusLost(evt);
        }
    });
    tfsearchbook.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            tfsearchbookActionPerformed(evt);
        }
    });

    btneditbook.setText("Edit Book Deatils");
    btneditbook.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btneditbookActionPerformed(evt);
        }
    });

    btnreloaddata.setText("Reload Data");
    btnreloaddata.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnreloaddataActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout panelviewbookLayout = new javax.swing.GroupLayout(panelviewbook);
    panelviewbook.setLayout(panelviewbookLayout);
    panelviewbookLayout.setHorizontalGroup(
        panelviewbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane3)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelviewbookLayout.createSequentialGroup()
            .addContainerGap(132, Short.MAX_VALUE)
            .addGroup(panelviewbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelviewbookLayout.createSequentialGroup()
                    .addComponent(jLabel16)
                    .addGap(335, 335, 335))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelviewbookLayout.createSequentialGroup()
                    .addComponent(tfsearchbook, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(40, 40, 40)
                    .addComponent(btnsearchbook)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnreloaddata)
                    .addGap(18, 18, 18)
                    .addComponent(btneditbook)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btndeletebook, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())))
    );
    panelviewbookLayout.setVerticalGroup(
        panelviewbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelviewbookLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel16)
            .addGap(43, 43, 43)
            .addGroup(panelviewbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnsearchbook)
                .addComponent(btndeletebook)
                .addComponent(tfsearchbook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btneditbook)
                .addComponent(btnreloaddata))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(116, Short.MAX_VALUE))
    );

    panelcenter.add(panelviewbook, "card5");

    panelchangepwd.setBackground(new java.awt.Color(255, 255, 255));

    jLabel18.setFont(new java.awt.Font("Courier 10 Pitch", 0, 36)); // NOI18N
    jLabel18.setText("Change Password");

    jLabel20.setText("Enter New Password");

    jLabel21.setText("Confirm New Password");

    pfnewpwd.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            pfnewpwdFocusGained(evt);
        }
    });
    pfnewpwd.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            pfnewpwdActionPerformed(evt);
        }
    });

    pfconfirmpwd.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            pfconfirmpwdFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            pfconfirmpwdFocusLost(evt);
        }
    });
    pfconfirmpwd.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            pfconfirmpwdActionPerformed(evt);
        }
    });

    btnchangepwdsubmit.setText("Submit");
    btnchangepwdsubmit.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnchangepwdsubmitActionPerformed(evt);
        }
    });

    labelmessge.setForeground(new java.awt.Color(237, 0, 0));

    javax.swing.GroupLayout panelchangepwdLayout = new javax.swing.GroupLayout(panelchangepwd);
    panelchangepwd.setLayout(panelchangepwdLayout);
    panelchangepwdLayout.setHorizontalGroup(
        panelchangepwdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelchangepwdLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel18)
            .addGap(325, 325, 325))
        .addGroup(panelchangepwdLayout.createSequentialGroup()
            .addGroup(panelchangepwdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(panelchangepwdLayout.createSequentialGroup()
                    .addGap(487, 487, 487)
                    .addComponent(labelmessge, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelchangepwdLayout.createSequentialGroup()
                    .addGap(270, 270, 270)
                    .addGroup(panelchangepwdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel20)
                        .addComponent(jLabel21))
                    .addGap(66, 66, 66)
                    .addGroup(panelchangepwdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnchangepwdsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pfnewpwd, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                        .addComponent(pfconfirmpwd))))
            .addContainerGap(237, Short.MAX_VALUE))
    );
    panelchangepwdLayout.setVerticalGroup(
        panelchangepwdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelchangepwdLayout.createSequentialGroup()
            .addGap(17, 17, 17)
            .addComponent(jLabel18)
            .addGap(77, 77, 77)
            .addGroup(panelchangepwdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(pfnewpwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(44, 44, 44)
            .addGroup(panelchangepwdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel21)
                .addComponent(pfconfirmpwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(labelmessge, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(btnchangepwdsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(321, Short.MAX_VALUE))
    );

    panelcenter.add(panelchangepwd, "card8");

    paneladdbook.setBackground(new java.awt.Color(255, 255, 255));

    jLabel8.setFont(new java.awt.Font("Courier 10 Pitch", 0, 36)); // NOI18N
    jLabel8.setText("Add Book");

    jLabel11.setText("ISBN No");

    jLabel12.setText("Book Name");

    jLabel13.setText("Author");

    jLabel14.setText("Publisher");

    jLabel15.setText("Year of Publish");

    btnsubmitbook.setText("Submit");
    btnsubmitbook.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnsubmitbookActionPerformed(evt);
        }
    });

    btnresetbook.setText("Reset");

    jLabel28.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
    jLabel28.setText("Bulk Upload ");

    jLabel29.setText("Upload File");

    btnChooseFile.setText("Choose File");
    btnChooseFile.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnChooseFileActionPerformed(evt);
        }
    });

    labelChoosedFileName.setText("    ");

    btnSampleFile.setText("Download Sample File");
    btnSampleFile.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnSampleFileActionPerformed(evt);
        }
    });

    btnCancelFile.setText("Cancel");
    btnCancelFile.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnCancelFileActionPerformed(evt);
        }
    });

    btnUploadFile.setText("Upload");
    btnUploadFile.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnUploadFileActionPerformed(evt);
        }
    });

    labelUploadMessage.setText("  ");

    javax.swing.GroupLayout paneladdbookLayout = new javax.swing.GroupLayout(paneladdbook);
    paneladdbook.setLayout(paneladdbookLayout);
    paneladdbookLayout.setHorizontalGroup(
        paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(paneladdbookLayout.createSequentialGroup()
            .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneladdbookLayout.createSequentialGroup()
                    .addGap(291, 291, 291)
                    .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(paneladdbookLayout.createSequentialGroup()
                            .addComponent(jLabel29)
                            .addGap(65, 65, 65)
                            .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(paneladdbookLayout.createSequentialGroup()
                                    .addComponent(btnChooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(29, 29, 29)
                                    .addComponent(btnSampleFile))
                                .addGroup(paneladdbookLayout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(labelChoosedFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(paneladdbookLayout.createSequentialGroup()
                            .addComponent(btnCancelFile)
                            .addGap(51, 51, 51)
                            .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnUploadFile)
                                .addGroup(paneladdbookLayout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(labelUploadMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGroup(paneladdbookLayout.createSequentialGroup()
                    .addGap(396, 396, 396)
                    .addComponent(jLabel8)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneladdbookLayout.createSequentialGroup()
            .addGap(0, 290, Short.MAX_VALUE)
            .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(paneladdbookLayout.createSequentialGroup()
                    .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel11)
                        .addComponent(jLabel15)
                        .addComponent(jLabel13)
                        .addComponent(jLabel12)
                        .addComponent(jLabel14))
                    .addGap(62, 62, 62)
                    .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tfbookname, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfpublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfyear, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfauthor, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfisbn, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGap(245, 245, 245))
        .addGroup(paneladdbookLayout.createSequentialGroup()
            .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneladdbookLayout.createSequentialGroup()
                    .addGap(376, 376, 376)
                    .addComponent(btnresetbook)
                    .addGap(96, 96, 96)
                    .addComponent(btnsubmitbook, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(paneladdbookLayout.createSequentialGroup()
                    .addGap(432, 432, 432)
                    .addComponent(jLabel28)))
            .addGap(0, 0, Short.MAX_VALUE))
    );
    paneladdbookLayout.setVerticalGroup(
        paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(paneladdbookLayout.createSequentialGroup()
            .addGap(14, 14, 14)
            .addComponent(jLabel8)
            .addGap(48, 48, 48)
            .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(paneladdbookLayout.createSequentialGroup()
                    .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfisbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11))
                    .addGap(50, 50, 50))
                .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfbookname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)))
            .addGap(14, 14, 14)
            .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tfauthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel13))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel14)
                .addComponent(tfpublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tfyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel15))
            .addGap(41, 41, 41)
            .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnsubmitbook)
                .addComponent(btnresetbook))
            .addGap(18, 18, 18)
            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel28)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
            .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel29)
                .addComponent(btnChooseFile)
                .addComponent(btnSampleFile))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(labelChoosedFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(paneladdbookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnCancelFile)
                .addComponent(btnUploadFile))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(labelUploadMessage)
            .addGap(21, 21, 21))
    );

    panelcenter.add(paneladdbook, "card4");

    panelbookreq.setBackground(new java.awt.Color(254, 254, 254));

    jLabel17.setFont(new java.awt.Font("Courier 10 Pitch", 0, 36)); // NOI18N
    jLabel17.setText("Book Request");

    btnreqsearchuserid.setBackground(new java.awt.Color(51, 153, 255));
    btnreqsearchuserid.setText("Search");
    btnreqsearchuserid.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnreqsearchuseridActionPerformed(evt);
        }
    });

    tfsearchuserbook.setText("Enter User ID");
    tfsearchuserbook.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            tfsearchuserbookFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            tfsearchuserbookFocusLost(evt);
        }
    });
    tfsearchuserbook.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            tfsearchuserbookActionPerformed(evt);
        }
    });
    tfsearchuserbook.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            tfsearchuserbookKeyReleased(evt);
        }
    });

    tblreqbook.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    ));
    tblreqbook.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblreqbookMouseClicked(evt);
        }
    });
    jScrollPane4.setViewportView(tblreqbook);

    cbfilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Issued", "Expired", "Returned", "Request Pending" }));
    cbfilter.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cbfilterActionPerformed(evt);
        }
    });

    btnrenew.setText("Renew");
    btnrenew.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnrenewActionPerformed(evt);
        }
    });

    btnreturn.setText("Return");
    btnreturn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnreturnActionPerformed(evt);
        }
    });

    btnaccept.setText("Accept");
    btnaccept.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnacceptActionPerformed(evt);
        }
    });

    btnAdvancedFilter.setText("Advanced Filter");
    btnAdvancedFilter.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnAdvancedFilterActionPerformed(evt);
        }
    });

    labelUserIdCheckMessage.setText(" ");

    javax.swing.GroupLayout panelbookreqLayout = new javax.swing.GroupLayout(panelbookreq);
    panelbookreq.setLayout(panelbookreqLayout);
    panelbookreqLayout.setHorizontalGroup(
        panelbookreqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(panelbookreqLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel17)
            .addGap(240, 240, 240)
            .addComponent(btnAdvancedFilter)
            .addGap(20, 20, 20))
        .addGroup(panelbookreqLayout.createSequentialGroup()
            .addGap(63, 63, 63)
            .addGroup(panelbookreqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(labelUserIdCheckMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(tfsearchuserbook, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(cbfilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(btnreqsearchuserid, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(btnrenew)
            .addGap(18, 18, 18)
            .addComponent(btnreturn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnaccept, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(153, Short.MAX_VALUE))
        .addGroup(panelbookreqLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane4)
            .addContainerGap())
    );
    panelbookreqLayout.setVerticalGroup(
        panelbookreqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelbookreqLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(panelbookreqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel17)
                .addComponent(btnAdvancedFilter))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
            .addGroup(panelbookreqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tfsearchuserbook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cbfilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnreqsearchuserid)
                .addComponent(btnrenew)
                .addComponent(btnreturn)
                .addComponent(btnaccept))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(labelUserIdCheckMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(27, 27, 27)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(68, 68, 68))
    );

    panelcenter.add(panelbookreq, "card8");

    paneledituser.setBackground(new java.awt.Color(254, 254, 254));

    jLabel22.setFont(new java.awt.Font("Courier 10 Pitch", 0, 36)); // NOI18N
    jLabel22.setText("Edit User");

    labelfullname.setText("Full Name");

    labeldob.setText("Date of Birth");

    labeladdress.setText("Address");

    labelgender.setText("Gender");

    labelphno.setText("Phone No.");

    labelemail.setText("Email");

    tffullname1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            tffullname1ActionPerformed(evt);
        }
    });

    tfdob1.setText("YYYY/MM/DD");
    tfdob1.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            tfdob1FocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            tfdob1FocusLost(evt);
        }
    });

    rbmale1.setText("Male");

    rbfemale1.setText("Female");

    rbothers1.setText("Others");

    tfaddress1.setColumns(20);
    tfaddress1.setRows(5);
    jScrollPane5.setViewportView(tfaddress1);

    btnupdate.setBackground(new java.awt.Color(51, 153, 255));
    btnupdate.setText("Update");
    btnupdate.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnupdateActionPerformed(evt);
        }
    });

    labelnotif1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

    btnexit.setText("Cancel");
    btnexit.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnexitActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout paneledituserLayout = new javax.swing.GroupLayout(paneledituser);
    paneledituser.setLayout(paneledituserLayout);
    paneledituserLayout.setHorizontalGroup(
        paneledituserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneledituserLayout.createSequentialGroup()
            .addGap(0, 414, Short.MAX_VALUE)
            .addComponent(labelnotif1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(136, 136, 136))
        .addGroup(paneledituserLayout.createSequentialGroup()
            .addGroup(paneledituserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneledituserLayout.createSequentialGroup()
                    .addGap(343, 343, 343)
                    .addComponent(jLabel22))
                .addGroup(paneledituserLayout.createSequentialGroup()
                    .addGap(237, 237, 237)
                    .addGroup(paneledituserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(labelgender)
                        .addComponent(labeldob)
                        .addComponent(labelfullname)
                        .addComponent(labelphno)
                        .addComponent(labeladdress)
                        .addComponent(labelemail))
                    .addGap(55, 55, 55)
                    .addGroup(paneledituserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(paneledituserLayout.createSequentialGroup()
                            .addComponent(btnexit)
                            .addGap(31, 31, 31)
                            .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(paneledituserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tfdob1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfemail1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, paneledituserLayout.createSequentialGroup()
                                .addComponent(rbmale1)
                                .addGap(18, 18, 18)
                                .addComponent(rbfemale1)
                                .addGap(18, 18, 18)
                                .addComponent(rbothers1))
                            .addComponent(tffullname1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfphno1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    paneledituserLayout.setVerticalGroup(
        paneledituserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(paneledituserLayout.createSequentialGroup()
            .addGap(39, 39, 39)
            .addComponent(jLabel22)
            .addGap(52, 52, 52)
            .addGroup(paneledituserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(labelfullname)
                .addComponent(tffullname1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(28, 28, 28)
            .addGroup(paneledituserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(labelgender)
                .addComponent(rbfemale1)
                .addComponent(rbothers1)
                .addComponent(rbmale1))
            .addGap(19, 19, 19)
            .addGroup(paneledituserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(labeldob)
                .addComponent(tfdob1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(paneledituserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(labeladdress)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(22, 22, 22)
            .addGroup(paneledituserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tfphno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(labelphno))
            .addGap(22, 22, 22)
            .addGroup(paneledituserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tfemail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(labelemail))
            .addGap(41, 41, 41)
            .addGroup(paneledituserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnupdate)
                .addComponent(btnexit))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
            .addComponent(labelnotif1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    panelcenter.add(paneledituser, "card2");

    paneleditbookdeatls.setBackground(new java.awt.Color(254, 254, 254));

    jLabel23.setFont(new java.awt.Font("Courier 10 Pitch", 0, 36)); // NOI18N
    jLabel23.setText("Edit Book Details");

    labelfullname1.setText("ISBN No");

    labeldob1.setText("Author");

    labelgender1.setText("Book Name");

    labelemail1.setText("Publisher");

    tfeditisbn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            tfeditisbnActionPerformed(evt);
        }
    });

    tfeditbookname.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            tfeditbooknameFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            tfeditbooknameFocusLost(evt);
        }
    });
    tfeditbookname.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            tfeditbooknameActionPerformed(evt);
        }
    });

    tfeditauthor.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            tfeditauthorActionPerformed(evt);
        }
    });

    tfeditpublisher.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            tfeditpublisherActionPerformed(evt);
        }
    });

    btnbookupdate.setBackground(new java.awt.Color(51, 153, 255));
    btnbookupdate.setText("Update");
    btnbookupdate.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnbookupdateActionPerformed(evt);
        }
    });

    labelnotif2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

    labelemail2.setText("year");

    tfedityear.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            tfedityearActionPerformed(evt);
        }
    });

    btneditexit.setText("Cancel");
    btneditexit.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btneditexitActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout paneleditbookdeatlsLayout = new javax.swing.GroupLayout(paneleditbookdeatls);
    paneleditbookdeatls.setLayout(paneleditbookdeatlsLayout);
    paneleditbookdeatlsLayout.setHorizontalGroup(
        paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneleditbookdeatlsLayout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(labelnotif2, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(136, 136, 136))
        .addGroup(paneleditbookdeatlsLayout.createSequentialGroup()
            .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneleditbookdeatlsLayout.createSequentialGroup()
                    .addGap(342, 342, 342)
                    .addComponent(jLabel23))
                .addGroup(paneleditbookdeatlsLayout.createSequentialGroup()
                    .addGap(282, 282, 282)
                    .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(paneleditbookdeatlsLayout.createSequentialGroup()
                            .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(labelgender1)
                                .addComponent(labelemail2))
                            .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(paneleditbookdeatlsLayout.createSequentialGroup()
                                    .addGap(97, 97, 97)
                                    .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfeditpublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tfedityear, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneleditbookdeatlsLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tfeditbookname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneleditbookdeatlsLayout.createSequentialGroup()
                                            .addComponent(btneditexit)
                                            .addGap(52, 52, 52)
                                            .addComponent(btnbookupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGroup(paneleditbookdeatlsLayout.createSequentialGroup()
                            .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(paneleditbookdeatlsLayout.createSequentialGroup()
                                    .addComponent(labelfullname1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(78, 78, 78))
                                .addGroup(paneleditbookdeatlsLayout.createSequentialGroup()
                                    .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(labelemail1)
                                        .addComponent(labeldob1))
                                    .addGap(97, 97, 97)))
                            .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfeditisbn)
                                .addComponent(tfeditauthor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))))))
            .addContainerGap(355, Short.MAX_VALUE))
    );
    paneleditbookdeatlsLayout.setVerticalGroup(
        paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(paneleditbookdeatlsLayout.createSequentialGroup()
            .addGap(25, 25, 25)
            .addComponent(jLabel23)
            .addGap(84, 84, 84)
            .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tfeditisbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(labelfullname1))
            .addGap(29, 29, 29)
            .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tfeditbookname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(labelgender1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(labeldob1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(tfeditauthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(25, 25, 25)
            .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tfeditpublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(labelemail1))
            .addGap(18, 18, 18)
            .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(tfedityear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(labelemail2))
            .addGap(46, 46, 46)
            .addGroup(paneleditbookdeatlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnbookupdate)
                .addComponent(btneditexit))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
            .addComponent(labelnotif2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    panelcenter.add(paneleditbookdeatls, "card2");

    panelFineStatement.setBackground(new java.awt.Color(255, 255, 255));
    panelFineStatement.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jLabel25.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
    jLabel25.setText("Fine Statement");
    panelFineStatement.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(368, 14, -1, -1));

    tblFineStatement.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    ));
    jScrollPane6.setViewportView(tblFineStatement);

    panelFineStatement.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 163, 1016, -1));

    dcReturndateFrom.setCurrentView(new datechooser.view.appearance.AppearancesList("Light",
        new datechooser.view.appearance.ViewAppearance("custom",
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                true,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 255),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(128, 128, 128),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(255, 0, 0),
                false,
                false,
                new datechooser.view.appearance.swing.ButtonPainter()),
            (datechooser.view.BackRenderer)null,
            false,
            true)));
try {
    dcReturndateFrom.setDefaultPeriods(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar(2020, 0, 1),
        new java.util.GregorianCalendar(2020, 0, 1))));
} catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
e1.printStackTrace();
}
panelFineStatement.add(dcReturndateFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 102, -1, -1));

tfSearchFinePaidUserid.setText("Enter User ID");
panelFineStatement.add(tfSearchFinePaidUserid, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 102, 211, -1));
panelFineStatement.add(dcReturndateTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(454, 102, -1, -1));

btnSearchFineStatement.setText("Search");
btnSearchFineStatement.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnSearchFineStatementActionPerformed(evt);
    }
    });
    panelFineStatement.add(btnSearchFineStatement, new org.netbeans.lib.awtextra.AbsoluteConstraints(635, 105, -1, -1));

    btnExport.setText("Export");
    btnExport.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnExportActionPerformed(evt);
        }
    });
    panelFineStatement.add(btnExport, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 105, -1, -1));

    jLabel26.setText("From");
    panelFineStatement.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 78, -1, -1));

    jLabel27.setText("To");
    panelFineStatement.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(454, 78, -1, -1));

    labelExportMessage.setForeground(new java.awt.Color(51, 204, 0));
    panelFineStatement.add(labelExportMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 140, 70, 20));

    panelcenter.add(panelFineStatement, "card10");

    mainPanel.add(panelcenter, java.awt.BorderLayout.CENTER);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    getAccessibleContext().setAccessibleDescription("Library Management");

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnaddbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddbookActionPerformed
        paneladduser.setVisible(false);
        panelviewusers.setVisible(false);
        paneladdbook.setVisible(true);
        panelviewbook.setVisible(false);
        panelbookreq.setVisible(false);
        //panelpending.setVisible(false);
        //labelChoosedFileName.setText("Eg. sample.xlsx");
        panelchangepwd.setVisible(false);
        panelFineStatement.setVisible(false);
    }//GEN-LAST:event_btnaddbookActionPerformed

    private void btnadduserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnadduserActionPerformed
        paneladduser.setVisible(true);
        panelviewusers.setVisible(false);
        paneladdbook.setVisible(false);
        panelviewbook.setVisible(false);
        panelbookreq.setVisible(false);
       // panelpending.setVisible(false);
        panelchangepwd.setVisible(false);
        panelFineStatement.setVisible(false);
    }//GEN-LAST:event_btnadduserActionPerformed

    private void btnviewusersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewusersActionPerformed
        displayViewUserPage();
    }//GEN-LAST:event_btnviewusersActionPerformed

    private void btnviewbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewbookActionPerformed
        paneladduser.setVisible(false);
        panelviewusers.setVisible(false);
        paneladdbook.setVisible(false);
        panelviewbook.setVisible(true);
        panelbookreq.setVisible(false);
        //panelpending.setVisible(false);
        panelchangepwd.setVisible(false);
        panelFineStatement.setVisible(false);
        tableBookData();
    }//GEN-LAST:event_btnviewbookActionPerformed

    private void btnbookreqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbookreqActionPerformed
        panelFineStatement.setVisible(false);
        paneladduser.setVisible(false);
        panelviewusers.setVisible(false);
        paneladdbook.setVisible(false);
        panelviewbook.setVisible(false);
        panelbookreq.setVisible(true);
       // panelpending.setVisible(false);
        btnaccept.setVisible(false);
        panelchangepwd.setVisible(false);
        labelDateChooserMessage.setVisible(true);
        createRequestTableData(-99,"");
    }//GEN-LAST:event_btnbookreqActionPerformed

    private void btnchangepwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnchangepwdActionPerformed
        paneladduser.setVisible(false);
        panelviewusers.setVisible(false);
        paneladdbook.setVisible(false);
        panelviewbook.setVisible(false);
        panelbookreq.setVisible(false);
       // panelpending.setVisible(false);
        panelFineStatement.setVisible(false);
        panelchangepwd.setVisible(true);
    }//GEN-LAST:event_btnchangepwdActionPerformed

    private void btnlogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlogoutActionPerformed
        dispose();
        TemporaryData.setCurrentUser(null);
        (new loginFrame()).setVisible(true);
    }//GEN-LAST:event_btnlogoutActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        Connection con=Connect.connectDB();
        PreparedStatement pst;
        ResultSet rs=null;
        String sql="update usertable set fullname=?,gender=?,dob=?,address=?,phno=?,email=?,type=? where userid=?";
        try{
            pst=con.prepareStatement(sql);
            pst.setString(1,tffullname1.getText());
            if(rbmale1.isSelected()){
                pst.setString(2,"male");
            }
            else if (rbfemale1.isSelected()) {
                pst.setString(2,"female");
            }
            else{
                pst.setString(2,"others");
            }
            pst.setString(3,tfdob1.getText());
            pst.setString(4,tfaddress1.getText());
            pst.setString(5,tfphno1.getText());
            pst.setString(6,tfemail1.getText());
            pst.setString(7,"user");
            pst.setInt(8,userid);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this,"Updated\n");
            clear();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this,e);
        }
        paneledituser.setVisible(false);
        displayViewUserPage();
    }//GEN-LAST:event_btnupdateActionPerformed

    private void tfdob1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdob1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_tfdob1FocusLost

    private void tfdob1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdob1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tfdob1FocusGained

    private void tffullname1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tffullname1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tffullname1ActionPerformed

    private void btnedituserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnedituserActionPerformed
        Connection con=Connect.connectDB();
        PreparedStatement pst;
        ResultSet rs=null;
        if(tblviewuser.getSelectedRow()!= -1){
            int i=tblviewuser.getSelectedRow();
            int c=0;
            userid=(int) tblviewuser.getModel().getValueAt(i,c);

            //JOptionPane.showMessageDialog(this, "valuse of  rowselected value  "+value);

            String sql="select * from usertable where userid=?";
            try {
                pst=con.prepareStatement(sql);
                pst.setInt(1,userid);
                rs=pst.executeQuery();
                if(rs.next()){
                    tffullname1.setText(rs.getString("fullname"));
                    if(rs.getString("gender").equals("male")){
                        rbmale1.setSelected(true);
                    }
                    else if(rs.getString("gender").equals("female")){
                        rbfemale1.setSelected(true);
                    }
                    else{
                        rbothers1.setSelected(true);
                    }
                    tfdob1.setText(rs.getString("dob"));
                    tfaddress1.setText(rs.getString("address"));
                    tfphno1.setText(rs.getString("phno"));
                    tfemail1.setText(rs.getString("email"));

                }
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(adminpage.class.getName()).log(Level.SEVERE, null, ex);
            }
            panelviewusers.setVisible(false);
            paneladduser.setVisible(false);
            paneledituser.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "plz select the user row");
        }
    }//GEN-LAST:event_btnedituserActionPerformed

    private void btndeleteuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteuserActionPerformed
        DefaultTableModel mod =(DefaultTableModel) tblviewuser.getModel();
        Connection con=Connect.connectDB();
        PreparedStatement pst;
        ResultSet rs=null;
        if(tblviewuser.getSelectedRow()!= -1){
            int i=tblviewuser.getSelectedRow();
            int c=0;
            int userid = (int) tblviewuser.getModel().getValueAt(i,c);

            //JOptionPane.showMessageDialog(this, "valuse of  rowselected value  "+value);
            int Conf=JOptionPane.showConfirmDialog(this,"Are yousure to delete?","Confirm",JOptionPane.YES_NO_OPTION);
            if(Conf==JOptionPane.YES_OPTION){
                con=Connect.connectDB();
                String sql="delete from usertable where userid=?";
                try {
                    pst=con.prepareStatement(sql);
                    pst.setInt(1,userid);
                    pst.execute();
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "btndeleteuserActionPerformed()"+ex);
                }
                mod.removeRow(tblviewuser.getSelectedRow());
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "plz select the user row");
        }
    }//GEN-LAST:event_btndeleteuserActionPerformed

    private void tfsearchuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfsearchuserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfsearchuserActionPerformed

    private void tfsearchuserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfsearchuserFocusLost
        if(tfsearchuser.getText().equalsIgnoreCase("")){
            tfsearchuser.setText("Enter the User ID or Name");
        }
    }//GEN-LAST:event_tfsearchuserFocusLost

    private void tfsearchuserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfsearchuserFocusGained
        if(tfsearchuser.getText().equalsIgnoreCase("Enter the User ID or Name")){
            tfsearchuser.setText("");
        }
    }//GEN-LAST:event_tfsearchuserFocusGained

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        Connection con=Connect.connectDB();
        PreparedStatement pst;
        ResultSet rs=null;
        destroyTable();
        DefaultTableModel mod =(DefaultTableModel) tblviewuser.getModel();
        con=Connect.connectDB();
        String sql="select * from usertable where userid=?";
        String[] columns = new String[] {
            "User ID", "Full Name", "Gender","Date of bith","address","Ph No.","Email","Type"
        };
        Object[][] tdata = new Object[1][9];
        try{
            //pst=con.prepareStatement(sql);
            pst=con.prepareStatement(sql);
            pst.setInt(1,Integer.valueOf(tfsearchuser.getText()));
            rs = pst.executeQuery();
            int i=0;
            if(rs.next()){
                tdata[i][0]=rs.getInt("userid");
                tdata[i][1]=rs.getString("fullname");
                tdata[i][2]=rs.getString("gender");
                tdata[i][3]=rs.getString("dob");
                tdata[i][4]=rs.getString("address");
                tdata[i][5]=rs.getString("phno");
                tdata[i][6]=rs.getString("email");
                tdata[i][7]=rs.getString("type");
            }
            mod.setDataVector(tdata, columns);
            con.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_btnsearchActionPerformed

    private void cbfilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbfilterActionPerformed
        
        if(cbfilter.getSelectedItem().toString().equalsIgnoreCase("All")){
            btnrenew.setVisible(false);
            btnaccept.setVisible(false);
            btnreturn.setVisible(false);
        }
        else if(cbfilter.getSelectedItem().toString().equalsIgnoreCase("Issued")){
            btnrenew.setVisible(true);
            btnaccept.setVisible(false);
            btnreturn.setVisible(true);
        }
        else if(cbfilter.getSelectedItem().toString().equalsIgnoreCase("Expired")){
            btnrenew.setVisible(true);
            btnaccept.setVisible(false);
            btnreturn.setVisible(true);
        }
        else if(cbfilter.getSelectedItem().toString().equalsIgnoreCase("Returned")){
            btnrenew.setVisible(false);
            btnaccept.setVisible(false);
            btnreturn.setVisible(false);
        }
        else if(cbfilter.getSelectedItem().toString().equalsIgnoreCase("Request Pending")){
            btnrenew.setVisible(false);
            btnaccept.setVisible(true);
            btnreturn.setVisible(false);
        }
        destroyTable();
        createRequestTableData(-99,"");
        
    }//GEN-LAST:event_cbfilterActionPerformed

    private void tfsearchuserbookFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfsearchuserbookFocusLost
        if(tfsearchuserbook.getText().equalsIgnoreCase("")){
            tfsearchuserbook.setText("Enter User ID");
        }
    }//GEN-LAST:event_tfsearchuserbookFocusLost

    private void tfsearchuserbookFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfsearchuserbookFocusGained
        if(tfsearchuserbook.getText().equalsIgnoreCase("Enter User ID")){
            tfsearchuserbook.setText("");
        }
    }//GEN-LAST:event_tfsearchuserbookFocusGained

    private void tffullnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tffullnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tffullnameActionPerformed

    private void btnsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsubmitActionPerformed
        Connection con=Connect.connectDB();
        PreparedStatement pst;
        ResultSet rs=null;
        try{
            String sql="insert into usertable(password,fullname,gender,dob,address,phno,email,type) values(?,?,?,?,?,?,?,?)";
            pst=con.prepareStatement(sql);
            pst.setString(2, tffullname.getText().trim().equalsIgnoreCase("") ? null : tffullname.getText());
            long dob=dcDOB.getSelectedDate().getTime().getTime();
            pst.setString(1,new java.sql.Date(dob).toString());
            if(rbmale.isSelected()){
                pst.setString(3,"male");
            }
            else if (rbfemale.isSelected()) {
                pst.setString(3,"female");
            }
            else{
                pst.setString(3,"others");
            }
            pst.setDate(4,new java.sql.Date(dob));
            pst.setString(5,tfaddress.getText());
            pst.setString(6,tfphno.getText());
            pst.setString(7,tfemail.getText());
            pst.setString(8,"user");
            int count = pst.executeUpdate();

            //  sql="select MAX(userid) from usertable";
            if(count==1){
                sql="select MAX(userid) as userid from usertable";
                pst=con.prepareStatement(sql);
                rs=pst.executeQuery();
                if(rs.next()){
                    int userid=rs.getInt("userid");
                    JOptionPane.showMessageDialog(this,"successfully uploaded\nUser ID of "+tffullname.getText()+" : "+userid);
                    clear();
                    con.close();
                }
            }
            else{
                JOptionPane.showMessageDialog(this,"faild");
                clear();
                con.close();
            }
            //System.out.println("total statements inserted = "+count);
        }
        catch(SQLException e){
            System.out.println(e.getErrorCode());
            System.out.println(e.getMessage());
            
            labelCreateUserSubmitMesssage.setForeground(Color.red);
            labelCreateUserSubmitMesssage.setText("Failed!");
            String message=e.getMessage();
            if(message.indexOf("fullname")!=-1){
                tffullname.setBackground(Color.red);
            }
            //.showMessageDialog(this,"sqlexception in btnsubmitActionPerformed\n"+e);
        }
    }//GEN-LAST:event_btnsubmitActionPerformed

    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
        clear();
    }//GEN-LAST:event_btnresetActionPerformed

    private void btnsubmitbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsubmitbookActionPerformed
        Connection con=null;
        PreparedStatement pst=null;
        con=Connect.connectDB();
        ResultSet rs=null;
        String sql= "insert into booktable(isbn,bookname,author,publisher,year) values(?,?,?,?,?)";
        try {
            pst=con.prepareStatement(sql);
            pst.setString(1,tfisbn.getText());
            pst.setString(2,tfbookname.getText());
            pst.setString(3,tfauthor.getText());
            pst.setString(4,tfpublisher.getText());
            pst.setInt(5,Integer.parseInt(tfyear.getText()));
            int ch =pst.executeUpdate();
            if(ch==1){
                sql="select MAX(serial) as serial from booktable";
                pst=con.prepareStatement(sql);
                rs=pst.executeQuery();
                if(rs.next()){
                    int serial=rs.getInt("serial");
                    JOptionPane.showMessageDialog(this,"Successfully Uploaded\nSeial No. of "+tffullname.getText()+" : "+serial);
                    clear();
                    con.close();
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,"btnsubmitbookActionPerformed()"+e);
        }
    }//GEN-LAST:event_btnsubmitbookActionPerformed

    private void btnreqsearchuseridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreqsearchuseridActionPerformed
        try {
            if (tfsearchuserbook.getText().equalsIgnoreCase("Enter User ID")) {
                createRequestTableData(-99, "");
            } else {
                createRequestTableData(Integer.valueOf(tfsearchuserbook.getText()), "");
            }
        } catch (NumberFormatException ne) {
            JOptionPane.showMessageDialog(this, "plz enter correct userid");
        }
    }//GEN-LAST:event_btnreqsearchuseridActionPerformed

    private void btnrenewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrenewActionPerformed
        if (tblreqbook.getSelectedRow() != -1) {
            DefaultTableModel mod = (DefaultTableModel) tblreqbook.getModel();
            int Conf = JOptionPane.showConfirmDialog(this, "Are you sure do you want to renew\nFine Amount : " + tblreqbook.getModel().getValueAt(tblreqbook.getSelectedRow(), 8), "Confirm", JOptionPane.OK_CANCEL_OPTION);
            if (Conf == JOptionPane.OK_OPTION) {
                String reqid = (String) tblreqbook.getModel().getValueAt(tblreqbook.getSelectedRow(), 0);
                Connection con = Connect.connectDB();
                PreparedStatement pst;
                ResultSet rs;
                String sql = "select * from reqtable where reqid='" + reqid + "'";
                try {
                    rs = getReqTableData(sql);
                    if (rs.next()) {
                        sql = "insert into reqtable(reqid,serial,isbn,bookname,reqdate,validfrom,validto,relatedreqid,status,paidfine,userid) values(?,?,?,?,?,?,?,?,?,?,?)";
                        pst = con.prepareStatement(sql);
                        pst.setString(1, UUID.randomUUID().toString());
                        pst.setInt(2, rs.getInt("serial"));
                        pst.setString(3, rs.getString("isbn"));
                        pst.setString(4, rs.getString("bookname"));
                        pst.setDate(5, (java.sql.Date) rs.getDate("reqdate"));
                        pst.setDate(6, new java.sql.Date(System.currentTimeMillis()));
                        pst.setDate(7, addDays(new java.sql.Date(System.currentTimeMillis()), 15));
                        pst.setString(8, rs.getString("reqid"));
                        pst.setString(9, "issued");
                        pst.setInt(10, 0);
                        pst.setInt(11, rs.getInt("userid"));
                        pst.executeUpdate();
                        sql = "update reqtable set status='renewed',paidfine=? where reqid=?";
                        pst = con.prepareStatement(sql);
                        pst.setInt(1, (int) tblreqbook.getModel().getValueAt(tblreqbook.getSelectedRow(), 8));
                        pst.setString(2, reqid);
                        pst.executeUpdate();
                        mod.removeRow(tblreqbook.getSelectedRow());
                        createRequestTableData(-99,"");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "btnrenewActionPerformed()\n" + ex);
                    ex.printStackTrace();
                }
            }

        }
    }//GEN-LAST:event_btnrenewActionPerformed

    private void pfconfirmpwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pfconfirmpwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pfconfirmpwdActionPerformed

    private void pfnewpwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pfnewpwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pfnewpwdActionPerformed

    private void btnchangepwdsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnchangepwdsubmitActionPerformed
            Connection con=Connect.connectDB();
            PreparedStatement pst;
            ResultSet rs=null;
        if(!(pfnewpwd.getPassword().equals("")&&pfconfirmpwd.getPassword().equals(""))){
            if(String.valueOf(pfnewpwd.getPassword()).equals(String.valueOf(pfconfirmpwd.getPassword()))){
                String sql="update usertable set password=? where userid=?";
                try{
                    pst=con.prepareStatement(sql);
                    pst.setString(1,String.valueOf(pfnewpwd.getPassword()));
                    pst.setInt(2,TemporaryData.getCurrentUser().userid);
                    int ch = pst.executeUpdate();
                    if(ch==1){
                        JOptionPane.showMessageDialog(this, "Password Changed\n");
                        pfnewpwd.setText("");
                        
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "Faild\n");
                    }
                }
                catch(SQLException e){
                    JOptionPane.showMessageDialog(this, "btnchangepwdsubmitActionPerformed() \n"+e);
                }
            }
            else{
                   labelmessge.setText("Passwords don’t match. Please try again.");
            }
        }
        else{
            JOptionPane.showMessageDialog(this,"Enter the New Password");
        }
    }//GEN-LAST:event_btnchangepwdsubmitActionPerformed

    private void pfconfirmpwdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pfconfirmpwdFocusGained
        labelmessge.setText("");
    }//GEN-LAST:event_pfconfirmpwdFocusGained

    private void pfnewpwdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pfnewpwdFocusGained
        labelmessge.setText("");
    }//GEN-LAST:event_pfnewpwdFocusGained

    private void pfconfirmpwdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pfconfirmpwdFocusLost

    }//GEN-LAST:event_pfconfirmpwdFocusLost

    private void btnsearchbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchbookActionPerformed
        Connection con=Connect.connectDB();
        PreparedStatement pst;
        ResultSet rs=null;
        DefaultTableModel mod =(DefaultTableModel) tblbookdetails.getModel();
       // String sql="select * booktable where bookname like '?%'";
        try {
            String sql="select count(*) as rowscount from booktable where bookname like '%" + tfsearchbook.getText() + "%'";
            pst=con.prepareStatement(sql);
            //pst.setString(1,tfsearchbook.getText());
            rs=pst.executeQuery();
            int rowscount = 0;
            if(rs.next()){
                rowscount=rs.getInt("rowscount");
            }
            sql="select * from booktable where bookname like '%" + tfsearchbook.getText() + "%'";
            pst=con.prepareStatement(sql);
           // pst.setString(1,tfsearchbook.getText());
            rs=pst.executeQuery();
            if(rs.next()){
                String[] columns = new String[] {
                "Serial No.", "ISBN No.", "Book Name","Author","Publisher","year"
            };
                rs.previous();
            Object[][] tdata = new Object[rowscount][6];
            int i=0;
            while(rs.next()){
                tdata[i][0]=rs.getInt("serial");
                tdata[i][1]=rs.getString("isbn");
                tdata[i][2]=rs.getString("bookname");
                tdata[i][3]=rs.getString("author");
                tdata[i][4]=rs.getString("publisher");
                tdata[i][5]=rs.getString("year");
                i++;
            }
            mod.setDataVector(tdata,columns);
            btnreloaddata.setVisible(true);
            }
            else{
                JOptionPane.showMessageDialog(this,"books not found!!");
                tfsearchbook.setText("Enter the Book Name");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Sql exception in btnsearchbookActionPerformed()"+ex);
        }
        
    }//GEN-LAST:event_btnsearchbookActionPerformed

    private void btndeletebookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeletebookActionPerformed
        DefaultTableModel mod =(DefaultTableModel) tblbookdetails.getModel();
        Connection con=Connect.connectDB();
        PreparedStatement pst;
        ResultSet rs=null;
        if(tblbookdetails.getSelectedRow()!= -1){
            int i=tblbookdetails.getSelectedRow();
            int c=0;
            int userid = (int) tblbookdetails.getModel().getValueAt(i,c);

            //JOptionPane.showMessageDialog(this, "valuse of  rowselected value  "+value);
            int Conf=JOptionPane.showConfirmDialog(this,"Are yousure to delete?","Confirm",JOptionPane.YES_NO_OPTION);
            if(Conf==JOptionPane.YES_OPTION){
                con=Connect.connectDB();
                String sql="delete from usertable where userid=?";
                try {
                    pst=con.prepareStatement(sql);
                    pst.setInt(1,userid);
                    pst.execute();
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this,"btndeletebookActionPerformed()"+ex);
                }
                mod.removeRow(tblbookdetails.getSelectedRow()) ;
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "plz select the book row");
        }
    }//GEN-LAST:event_btndeletebookActionPerformed

    private void tfsearchbookFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfsearchbookFocusGained
        if(tfsearchbook.getText().equalsIgnoreCase("Enter the Book Name")){
            tfsearchbook.setText("");
        }
    }//GEN-LAST:event_tfsearchbookFocusGained

    private void tfsearchbookFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfsearchbookFocusLost
        if(tfsearchbook.getText().equalsIgnoreCase("")){
            tfsearchbook.setText("Enter the Book Name");
        }
    }//GEN-LAST:event_tfsearchbookFocusLost

    private void tfsearchbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfsearchbookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfsearchbookActionPerformed

    private void btneditbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditbookActionPerformed
        Connection con=Connect.connectDB();
        PreparedStatement pst;
        ResultSet rs=null;
        if(tblbookdetails.getSelectedRow()!= -1){
            int i=tblbookdetails.getSelectedRow();
            int c=0;
            serialno=(int) tblbookdetails.getModel().getValueAt(i,c);

            //JOptionPane.showMessageDialog(this, "valuse of  rowselected value  "+value);

            String sql="select * from booktable where serial=?";
            try {
                pst=con.prepareStatement(sql);
                pst.setInt(1,serialno);
                rs=pst.executeQuery();
                if(rs.next()){
                    tfeditisbn.setText(rs.getString("isbn"));
                    tfeditbookname.setText(rs.getString("bookname"));
                    tfeditauthor.setText(rs.getString("author"));
                    tfeditpublisher.setText(rs.getString("publisher"));
                    tfedityear.setText(rs.getString("year"));
                }                
                con.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"btneditbookActionPerformed()"+ex);
            }
            panelviewbook.setVisible(false);
            paneleditbookdeatls.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "plz select the book row");
        }
    }//GEN-LAST:event_btneditbookActionPerformed

    private void tfeditisbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfeditisbnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfeditisbnActionPerformed

    private void tfeditbooknameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfeditbooknameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tfeditbooknameFocusGained

    private void tfeditbooknameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfeditbooknameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_tfeditbooknameFocusLost

    private void btnbookupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbookupdateActionPerformed
       Connection con=Connect.connectDB();
        PreparedStatement pst;
        ResultSet rs=null;
        String sql="update booktable set isbn=?,bookname=?,author=?,publisher=?,year=? where serial="+serialno;
        try{
            pst=con.prepareStatement(sql);
            pst.setString(1,tfeditisbn.getText());
            pst.setString(2,tfeditbookname.getText());
            pst.setString(3,tfeditauthor.getText());
            pst.setString(4,tfeditpublisher.getText());
            pst.setString(5,tfedityear.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this,"Updated\n");
            clear();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this,e);
        }
        paneleditbookdeatls.setVisible(false);
        panelviewbook.setVisible(true);
        tableBookData(); 
    }//GEN-LAST:event_btnbookupdateActionPerformed

    private void tfeditbooknameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfeditbooknameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfeditbooknameActionPerformed

    private void tfeditpublisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfeditpublisherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfeditpublisherActionPerformed

    private void tfedityearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfedityearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfedityearActionPerformed

    private void tfeditauthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfeditauthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfeditauthorActionPerformed

    private void btneditexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditexitActionPerformed
        paneleditbookdeatls.setVisible(false);
        panelviewbook.setVisible(true);
        tableBookData();
    }//GEN-LAST:event_btneditexitActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        paneledituser.setVisible(false);
        panelviewusers.setVisible(true);
        tableUserData();
    }//GEN-LAST:event_btnexitActionPerformed

    private void btnreloaddataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreloaddataActionPerformed
        tableBookData();
        btnreloaddata.setVisible(false);
        tfsearchbook.setText("Enter the Book Name");
    }//GEN-LAST:event_btnreloaddataActionPerformed

    private void btnacceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnacceptActionPerformed
        if (tblreqbook.getSelectedRow() != -1) {
            DefaultTableModel mod = (DefaultTableModel) tblreqbook.getModel(); 
            Connection con;
            con = Connect.connectDB();
            PreparedStatement pst;
            ResultSet rs;
            String isbn = (String) tblreqbook.getModel().getValueAt(tblreqbook.getSelectedRow(), 3);
            List<Integer> serialList = new ArrayList<>();
            String sql = "select * from reqtable where status='issued' and isbn='" + isbn + "'";
            int serialno = 0;
            try {
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                while (rs.next()) {
                    serialList.add(rs.getInt("serial"));
                }
                sql = "select * from booktable where isbn='" + isbn + "'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                while (rs.next()) {
                    if (!serialList.contains(rs.getInt("serial"))) {
                        serialno = rs.getInt("serial");
                        break;
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "first try-catch\nbtnacceptActionPerformed()\n" + ex);
            }
            if (serialno != 0) {
                try {
                    sql = "update reqtable set serial=?,validfrom=?,validto=?,status=? where reqid=?";
                    pst = con.prepareStatement(sql);
                    pst.setInt(1, serialno);
                    pst.setDate(2, new java.sql.Date(System.currentTimeMillis()));
                    pst.setDate(3, addDays(new java.sql.Date(System.currentTimeMillis()), 15));
                    pst.setString(4, "issued");
                    pst.setString(5, (String) tblreqbook.getModel().getValueAt(tblreqbook.getSelectedRow(), 0));
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Book Issued\nBook Name : " + (String) tblreqbook.getModel().getValueAt(tblreqbook.getSelectedRow(), 4) + "\nSerialno : " + serialno);
                    mod.removeRow(tblreqbook.getSelectedRow());
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "second try-catch\nbtnacceptActionPerformed()\n" + ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Book is not available");
            }
        }
    }//GEN-LAST:event_btnacceptActionPerformed

    private void tblreqbookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblreqbookMouseClicked
     ///if(cbfilter.getSelectedItem().toString().equalsIgnoreCase("All")){
        // if(tblreqbook.getSelectedRow()!=-1&&tblreqbook.getModel().getValueAt(tblreqbook.getSelectedRow(),2)==""){
                    //          btnaccept.setVisible(true);
        // }
    // }   
      //  if(tblreqbook.getSelectedRow()!=-1){
       //     JOptionPane.showMessageDialog(this,"current selected row :"+tblreqbook.getSelectedRow()+"\n 1st column value : "+tblreqbook.getModel().getValueAt(tblreqbook.getSelectedRow(), 0));
      //  }
    }//GEN-LAST:event_tblreqbookMouseClicked

    private void btnreturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreturnActionPerformed
        if (tblreqbook.getSelectedRow() != -1) {
            Connection con=Connect.connectDB();
            PreparedStatement pst;
            DefaultTableModel mod = (DefaultTableModel) tblreqbook.getModel();
            int Conf = JOptionPane.showConfirmDialog(this, "Are you sure do you want to renew\nFine Amount : " + tblreqbook.getModel().getValueAt(tblreqbook.getSelectedRow(), 8), "Confirm", JOptionPane.OK_CANCEL_OPTION);
            if (Conf == JOptionPane.OK_OPTION) {
                try {
                    String reqid=(String) tblreqbook.getModel().getValueAt(tblreqbook.getSelectedRow(),0);
                    String sql="update reqtable set status='returned',paidfine="+tblreqbook.getModel().getValueAt(tblreqbook.getSelectedRow(), 8)+" where reqid='"+reqid+"'";
                    pst=con.prepareStatement(sql);
                    pst.executeUpdate();
                    mod.removeRow(tblreqbook.getSelectedRow());
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "btnreturnActionPerformed()\n"+ex);
                }
                
            }
        }
    }//GEN-LAST:event_btnreturnActionPerformed

    private void btnCancelFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelFilterActionPerformed
        filterDialogBox.dispose();
        btnAdvancedFilter.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_btnCancelFilterActionPerformed

    private void btnAdvancedFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdvancedFilterActionPerformed
        
        filterDialogBox.setSize(400, 300);
        filterDialogBox.setLocationRelativeTo(panelbookreq);
        filterDialogBox.setVisible(true);
    }//GEN-LAST:event_btnAdvancedFilterActionPerformed

    private void filterDialogBoxWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_filterDialogBoxWindowLostFocus

    }//GEN-LAST:event_filterDialogBoxWindowLostFocus

    private void btnApplyFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyFilterActionPerformed
        
        filterDialogBox.setName("Advaned Filter");
        long validfrom;
        java.sql.Date dateValidFrom = null;
        long validto;
        java.sql.Date dateValidTo = null;
        int userid= tfsearchuserbook.getText().equalsIgnoreCase("Enter User ID") ? -99 : Integer.valueOf(tfsearchuserbook.getText());
        if (!dateChooserFrom.getText().trim().isEmpty()) {
            validfrom = dateChooserFrom.getSelectedDate().getTime().getTime();
            dateValidFrom = new java.sql.Date(validfrom);
        }
        if (!dateChooserTo.getText().trim().isEmpty()) {
            validto = dateChooserTo.getSelectedDate().getTime().getTime();//long date for converting to sql date
            dateValidTo = new java.sql.Date(validto);
        }
        String baseQry = "";
        if (dateChooserFrom.getText().trim().isEmpty() || dateChooserTo.getText().trim().isEmpty()) {

            String conQry2 = !dateChooserFrom.getText().trim().isEmpty() ? statusKeyMap.get(jComboBox1.getSelectedItem())+ " > '" + dateValidFrom + "'" : baseQry;
            String conQry3 = conQry2.trim().isEmpty() && !dateChooserTo.getText().trim().isEmpty() ? statusKeyMap.get(jComboBox1.getSelectedItem())+"  < '" + dateValidTo + "'" : conQry2;
            createRequestTableData(userid, conQry3);
            btnAdvancedFilter.setBackground(Color.green);
        } else {
            if ( ! dateChooserFrom.getSelectedDate().after( dateChooserTo.getSelectedDate() ) ) {
                String dateFilter = " " + statusKeyMap.get(jComboBox1.getSelectedItem()) + " between '" + dateValidFrom + "' and '" + dateValidTo + "'";
                createRequestTableData(userid, dateFilter);
                btnAdvancedFilter.setBackground(Color.green);
            } else {
                labelDateChooserMessage.setForeground(Color.red);
                labelDateChooserMessage.setText("Date From grater than Date To");
                labelDateChooserMessage.setVisible(true);
                Timer timer = new Timer(3000, event -> {
                        labelDateChooserMessage.setVisible(false);
                });
                timer.setRepeats(false);
                timer.start();
                btnAdvancedFilter.setBackground(Color.LIGHT_GRAY);
            }
        }

        /*long validfrom = dateChooserFrom.getSelectedDate().getTime().getTime();
        java.sql.Date dateValidFrom = new java.sql.Date(validfrom);
        long validto = dateChooserTo.getSelectedDate().getTime().getTime();//long date for converting to sql date
        java.sql.Date dateValidTo = new java.sql.Date(validto);
        if (!dateValidFrom.after(dateValidTo)) {
            String dateFilter = " " + statusKeyMap.get(jComboBox1.getSelectedItem()) + " between '" + dateValidFrom + "' and '" + dateValidTo + "'";
            if (tfsearchuserbook.getText().equalsIgnoreCase("Enter User ID") || tfsearchuserbook.getText().isEmpty()) {
                createRequestTableData(-99, dateFilter);
                filterDialogBox.dispose();
                btnAdvancedFilter.setBackground(Color.green);
            } else {
                try {
                    int userid = Integer.valueOf(tfsearchuserbook.getText());
                    createRequestTableData(userid, dateFilter);
                    filterDialogBox.dispose();
                    btnAdvancedFilter.setBackground(Color.green);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Plz Enter a Valid User ID\n");
                    filterDialogBox.dispose();
                    btnAdvancedFilter.setBackground(Color.LIGHT_GRAY);
                }
            }

        }else{
            JOptionPane.showMessageDialog(this,"Date from grater than date To");
            btnAdvancedFilter.setBackground(Color.LIGHT_GRAY);
        }  */
    }//GEN-LAST:event_btnApplyFilterActionPerformed

    private void filterDialogBoxWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_filterDialogBoxWindowActivated

    }//GEN-LAST:event_filterDialogBoxWindowActivated

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        if(filterDialogBox.isEnabled()){
            filterDialogBox.dispose();
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void tfsearchuserbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfsearchuserbookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfsearchuserbookActionPerformed

    private void btnFineStatementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFineStatementActionPerformed
        paneladduser.setVisible(false);
        panelviewusers.setVisible(false);
        paneladdbook.setVisible(false);
        panelviewbook.setVisible(false);
        panelbookreq.setVisible(false);
        btnaccept.setVisible(false);
        panelchangepwd.setVisible(false);
        panelFineStatement.setVisible(true);
        createFineStatementData("");
        
    }//GEN-LAST:event_btnFineStatementActionPerformed

    private void btnSearchFineStatementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchFineStatementActionPerformed
        long validfrom;
        java.sql.Date dateValidFrom = null;
        long validto;
        java.sql.Date dateValidTo = null;
        //String userId = 
        if (!dcReturndateFrom.getText().trim().isEmpty()) {
            validfrom = dcReturndateFrom.getSelectedDate().getTime().getTime();
            dateValidFrom = new java.sql.Date(validfrom);
        }
        if (!dcReturndateTo.getText().trim().isEmpty()) {
            validto = dcReturndateTo.getSelectedDate().getTime().getTime();//long date for converting to sql date
            dateValidTo = new java.sql.Date(validto);
        }
        String baseQry = "";
        if (dcReturndateFrom.getText().trim().isEmpty() || dcReturndateTo.getText().trim().isEmpty()) {

            String conQry2 = !dcReturndateFrom.getText().trim().isEmpty() ? " and returndate > '" + dateValidFrom + "'" : baseQry;
            String conQry3 = conQry2.trim().isEmpty() && !dcReturndateTo.getText().trim().isEmpty() ? " and returndate < '" + dateValidTo + "'" : conQry2;
            createFineStatementData(conQry3);
        }else {
            if ( ! dcReturndateFrom.getSelectedDate().after( dcReturndateTo.getSelectedDate() ) ) {
                String conQry1 = dcReturndateFrom.getText().trim().isEmpty() && dcReturndateTo.getText().trim().isEmpty() ? baseQry : " and returndate between '" + dateValidFrom + "' and '" + dateValidTo + "'";
                createFineStatementData(conQry1);
            } else {
                JOptionPane.showMessageDialog(this, "From Date grater than To Date");
            }
        }
    }//GEN-LAST:event_btnSearchFineStatementActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        fileChooser.setSize(400, 300);
        String location="";
        //fileChooser.setVisible(true);
        int returnValue=fileChooser.showSaveDialog(null);
        if (returnValue == fileChooser.APPROVE_OPTION) {
            if (fileChooser.getSelectedFile().isDirectory()) {
		location = fileChooser.getSelectedFile().toString();
            }
            createExcelFile(location);
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileChooserActionPerformed

    private void tfsearchuserbookKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfsearchuserbookKeyReleased
        try {
            Integer.parseInt(tfsearchuserbook.getText());
        } catch (NumberFormatException e) {
            labelUserIdCheckMessage.setForeground(Color.red);
            labelUserIdCheckMessage.setText("Please enter a valid UserID");
            labelUserIdCheckMessage.setVisible(true);
            tfsearchuserbook.setText("");
            Timer timer = new Timer(3000, event -> {
                labelUserIdCheckMessage.setText("  ");
            });
            timer.setRepeats(false);
            timer.start();
        }
    }//GEN-LAST:event_tfsearchuserbookKeyReleased

    private void btnSampleFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSampleFileActionPerformed
        //URL url = getClass().getResource("Sample Sheet-BookDetails.xlsx");
        //System.out.println("File Path: "+url.getPath());
        //File file = new File(url.getPath());
        //File samplefile = new File("Excel sheets/Sample Sheet-Book Details.xlsx");
        // System.out.println("File Path: "+file.getAbsolutePath());
        String fileName="Book-Details-"+System.currentTimeMillis();
        String[] columns=new String[]{
            "ISBN","Book Name","Author","Publisher","Year"
        };
        try {
            int returnValue = fileChooser.showSaveDialog(null);
            if (returnValue == fileChooser.APPROVE_OPTION) {
                if (fileChooser.getSelectedFile().isDirectory()) {    
                    ExcelExport.generateFile(null, columns, fileChooser.getSelectedFile().toString(), fileName);
                }
            }
            File sampleFile=new File(fileChooser.getSelectedFile()+"/"+fileName+".xlsx");
            Desktop dt = Desktop.getDesktop();
            dt.open(sampleFile.getAbsoluteFile());
        } catch (IOException io) {
            JOptionPane.showMessageDialog(this, "btnSampleFileActionPerformed()" + io);
        }
    }//GEN-LAST:event_btnSampleFileActionPerformed

    private void btnChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseFileActionPerformed

        fileChooserGetter = new JFileChooser();
        int returnValue=fileChooserGetter.showOpenDialog(null);
        if (returnValue == fileChooserGetter.APPROVE_OPTION) {
            if (fileChooserGetter.getSelectedFile().isFile()){
                File file = fileChooserGetter.getSelectedFile();
                labelChoosedFileName.setVisible(true);
                labelChoosedFileName.setText(file.toString());
            }
            
        }
    }//GEN-LAST:event_btnChooseFileActionPerformed

    private void btnUploadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadFileActionPerformed

        if(fileChooserGetter.getSelectedFile()!=null){
                File file=fileChooserGetter.getSelectedFile();
                try {
                    boolean valuse=ExcelExport.uploadFile(file);
                    if(valuse){
                        labelUploadMessage.setForeground(Color.green);
                        labelUploadMessage.setText("Successfully Uploaded");
                    }
                    else{
                        labelUploadMessage.setForeground(Color.red);
                        labelUploadMessage.setText("Failed");
                    }
                } catch (IOException io) {
                    labelUploadMessage.setForeground(Color.red);
                    labelUploadMessage.setText("Failed");
                } catch (SQLException ex) {
                    labelUploadMessage.setForeground(Color.red);
                    labelUploadMessage.setText("Failed");
                    ex.printStackTrace();
                    
                   // JOptionPane.showMessageDialog(this,"btnUploadFileActionPerformed()"+ex);
                }finally{
                    labelChoosedFileName.setText(" ");
                    clearFileSelection();
                }
            }
        else{
            labelUploadMessage.setForeground(Color.red);
            labelUploadMessage.setText("Please Choose a excel File");
        }
            Timer timer = new Timer(5000, event -> {
                labelUploadMessage.setText("  ");
            });
            timer.setRepeats(false);
            timer.start();
    }//GEN-LAST:event_btnUploadFileActionPerformed

    private void btnCancelFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelFileActionPerformed
        clearFileSelection();
    }//GEN-LAST:event_btnCancelFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Librarianpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Librarianpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Librarianpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Librarianpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Librarianpage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdvancedFilter;
    private javax.swing.JButton btnApplyFilter;
    private javax.swing.JButton btnCancelFile;
    private javax.swing.JButton btnCancelFilter;
    private javax.swing.JButton btnChooseFile;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnFineStatement;
    private javax.swing.JButton btnSampleFile;
    private javax.swing.JButton btnSearchFineStatement;
    private javax.swing.JButton btnUploadFile;
    private javax.swing.JButton btnaccept;
    private javax.swing.JButton btnaddbook;
    private javax.swing.JButton btnadduser;
    private javax.swing.JButton btnbookreq;
    private javax.swing.JButton btnbookupdate;
    private javax.swing.JButton btnchangepwd;
    private javax.swing.JButton btnchangepwdsubmit;
    private javax.swing.JButton btndeletebook;
    private javax.swing.JButton btndeleteuser;
    private javax.swing.JButton btneditbook;
    private javax.swing.JButton btneditexit;
    private javax.swing.JButton btnedituser;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnlogout;
    private javax.swing.JButton btnreloaddata;
    private javax.swing.JButton btnrenew;
    private javax.swing.JButton btnreqsearchuserid;
    private javax.swing.JButton btnreset;
    private javax.swing.JButton btnresetbook;
    private javax.swing.JButton btnreturn;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton btnsearchbook;
    private javax.swing.JButton btnsubmit;
    private javax.swing.JButton btnsubmitbook;
    private javax.swing.JButton btnupdate;
    private javax.swing.JButton btnviewbook;
    private javax.swing.JButton btnviewusers;
    private javax.swing.JComboBox<String> cbfilter;
    private datechooser.beans.DateChooserDialog dateChooserDialog1;
    private datechooser.beans.DateChooserCombo dateChooserFrom;
    private datechooser.beans.DateChooserCombo dateChooserTo;
    private datechooser.beans.DateChooserCombo dcDOB;
    private datechooser.beans.DateChooserCombo dcReturndateFrom;
    private datechooser.beans.DateChooserCombo dcReturndateTo;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JFileChooser fileChooserGetter;
    private javax.swing.JDialog filterDialogBox;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelChoosedFileName;
    private javax.swing.JLabel labelCreateUserSubmitMesssage;
    private javax.swing.JLabel labelDateChooserMessage;
    private javax.swing.JLabel labelExportMessage;
    private javax.swing.JLabel labelUploadMessage;
    private javax.swing.JLabel labelUserIdCheckMessage;
    private javax.swing.JLabel labeladdress;
    private javax.swing.JLabel labeldob;
    private javax.swing.JLabel labeldob1;
    private javax.swing.JLabel labelemail;
    private javax.swing.JLabel labelemail1;
    private javax.swing.JLabel labelemail2;
    private javax.swing.JLabel labelfullname;
    private javax.swing.JLabel labelfullname1;
    private javax.swing.JLabel labelgender;
    private javax.swing.JLabel labelgender1;
    private javax.swing.JLabel labelmessge;
    private javax.swing.JLabel labelnotif;
    private javax.swing.JLabel labelnotif1;
    private javax.swing.JLabel labelnotif2;
    private javax.swing.JLabel labelphno;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel panelFineStatement;
    private javax.swing.JPanel paneladdbook;
    private javax.swing.JPanel paneladduser;
    private javax.swing.JPanel panelbookreq;
    private javax.swing.JPanel panelcenter;
    private javax.swing.JPanel panelchangepwd;
    private javax.swing.JPanel panelcontol;
    private javax.swing.JPanel paneleditbookdeatls;
    private javax.swing.JPanel paneledituser;
    private javax.swing.JPanel panelviewbook;
    private javax.swing.JPanel panelviewusers;
    private javax.swing.JPasswordField pfconfirmpwd;
    private javax.swing.JPasswordField pfnewpwd;
    private javax.swing.JRadioButton rbfemale;
    private javax.swing.JRadioButton rbfemale1;
    private javax.swing.JRadioButton rbmale;
    private javax.swing.JRadioButton rbmale1;
    private javax.swing.JRadioButton rbothers;
    private javax.swing.JRadioButton rbothers1;
    private javax.swing.JTable tblFineStatement;
    private javax.swing.JTable tblbookdetails;
    private javax.swing.JTable tblreqbook;
    private javax.swing.JTable tblviewuser;
    private javax.swing.JTextField tfSearchFinePaidUserid;
    private javax.swing.JTextArea tfaddress;
    private javax.swing.JTextArea tfaddress1;
    private javax.swing.JTextField tfauthor;
    private javax.swing.JTextField tfbookname;
    private javax.swing.JTextField tfdob1;
    private javax.swing.JTextField tfeditauthor;
    private javax.swing.JTextField tfeditbookname;
    private javax.swing.JTextField tfeditisbn;
    private javax.swing.JTextField tfeditpublisher;
    private javax.swing.JTextField tfedityear;
    private javax.swing.JTextField tfemail;
    private javax.swing.JTextField tfemail1;
    private javax.swing.JTextField tffullname;
    private javax.swing.JTextField tffullname1;
    private javax.swing.JTextField tfisbn;
    private javax.swing.JTextField tfphno;
    private javax.swing.JTextField tfphno1;
    private javax.swing.JTextField tfpublisher;
    private javax.swing.JTextField tfsearchbook;
    private javax.swing.JTextField tfsearchuser;
    private javax.swing.JTextField tfsearchuserbook;
    private javax.swing.JTextField tfyear;
    // End of variables declaration//GEN-END:variables

    private void clear() {
       tffullname.setText("");
       
       tfaddress.setText("");
       tfphno.setText("");
       tfemail.setText("");
       rbfemale.setSelected(false);
       //rblibrarian.setSelected(false);
       rbmale.setSelected(false);
       rbothers.setSelected(false);
       tfbookname.setText("");
       tfisbn.setText("");
       tfauthor.setText("");
       tfpublisher.setText("");
       tfyear.setText("");
       tfeditauthor.setText("");
       tfeditbookname.setText("");
       tfeditisbn.setText("");
       tfeditpublisher.setText("");
       tfedityear.setText("");
       //rbuser.setSelected(false);
    }
    private void tableUserData() {
        try{
            ResultSet rs;
            DefaultTableModel mod =(DefaultTableModel) tblviewuser.getModel();
            int rowsCount=getTableRowCount("select count(*) as rowscount from usertable");
            String[] columns = new String[] {
                "User ID", "Full Name", "Gender","Date of bith","address","Ph No.","Email","Type"
            };
            Object[][] tdata = new Object[rowsCount][9];
            int i=0;
            rs=getTableData();
            rs.next();
            while(rs.next()){
                tdata[i][0]=rs.getInt("userid");
                tdata[i][1]=rs.getString("fullname");
                tdata[i][2]=rs.getString("gender");
                tdata[i][3]=rs.getString("dob");
                tdata[i][4]=rs.getString("address");
                tdata[i][5]=rs.getString("phno");
                tdata[i][6]=rs.getString("email");
                tdata[i][7]=rs.getString("type");
                i++;
            }
            mod.setDataVector(tdata, columns);
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this,"sqlexception in tableData\n"+e);
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(this,"exception in tableData\n"+e);
        }
        
    }
    private ResultSet getTableData() {
        Connection con;
        con=Connect.connectDB();
        ResultSet rs=null;
        PreparedStatement pst;
        String sql="select * from usertable";
        try{
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            //con.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, "sqlexception in getTableData\n"+e);
        }
        return rs;
    }
    private ResultSet getReqTableData(String sql) {
        Connection con;
        con=Connect.connectDB();
        ResultSet rs=null;
        PreparedStatement pst;
        //String sql="select * from reqtable";
        try{
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            //con.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, "sqlexception in getReqTableData()\n"+e);
        }
        return rs;
    }

    private int getTableRowCount(String sql){
        int i=0;
        Connection con;
        con=Connect.connectDB();
        ResultSet rs=null;
        PreparedStatement pst;
        try{
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            if(rs.next()){
                i=rs.getInt("rowscount");
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, "sqlexception in getTableRowCount\n"+e);
        }
        return i;  
    }
    private void destroyTable() {
        DefaultTableModel mod =(DefaultTableModel) tblviewuser.getModel();
        mod.getDataVector().removeAllElements();
        mod.fireTableDataChanged();
    }
    private void displayViewUserPage() {
        
        tableUserData();
        panelviewusers.setVisible(true);
        paneladduser.setVisible(false);
        paneledituser.setVisible(false);
        paneladduser.setVisible(false);
        panelviewusers.setVisible(true);
        paneladdbook.setVisible(false);
        panelviewbook.setVisible(false);
        panelbookreq.setVisible(false);
        //panelpending.setVisible(false);
        panelchangepwd.setVisible(false);
        panelFineStatement.setVisible(false);
    }

    private void createRequestTableData(int userId,String dateFilter) {
        setExpiredReq();
        try {
            String filter = cbfilter.getSelectedItem().toString();
            String baseQuery = "select * from reqtable";
            String whereQuery = userId == -99 && dateFilter.equalsIgnoreCase("") ? baseQuery : baseQuery + " where ";
            String addQuery= userId==-99 && !dateFilter.equalsIgnoreCase("")? whereQuery+dateFilter : whereQuery+"userid="+userId;
            String conQuery =  filter.equalsIgnoreCase("all") || userId == -99? whereQuery : addQuery+" and status='"+statusKeyMap.get(filter)+"'";
            //todo
            String sql = filter.equalsIgnoreCase("all") ? whereQuery+dateFilter :conQuery+dateFilter;
                ResultSet rs;
                DefaultTableModel mod = (DefaultTableModel) tblreqbook.getModel();
                rs = getReqTableData(sql);
                reqDataLoad(rs, statusKeyMap.get(filter)); 
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "sqlexception in createRequestTableData\n" + e);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "exception in createRequestTableData\n" + e);
            e.printStackTrace();
        }

    }

    private BookRequest createObjRequestList(ResultSet rs) throws SQLException {
        BookRequest brObj = new BookRequest();
        if (rs != null) {
            int fineAmountPerDay = 5;
            
            brObj.setReqid(rs.getString("reqid"));
            brObj.setUserid(rs.getInt("userid"));
            brObj.setSerialNo(rs.getInt("serial"));
            brObj.setIsbnNo(rs.getString("isbn"));
            brObj.setBookName(rs.getString("bookname"));
            brObj.setReqdate(rs.getDate("reqdate"));
            brObj.setValidFrom(rs.getDate("validfrom"));
            brObj.setValidTo(rs.getDate("validto"));
            Date today = new Date();
            Date validTo = brObj.getValidTo();
            if (validTo != null && today.after(validTo)) {
                long difference = validTo.getTime() - today.getTime();
                int daysBetween = Math.abs(Math.round(difference / (1000 * 60 * 60 * 24)));
                int fineAmt = daysBetween * fineAmountPerDay;
                brObj.setFinePending(fineAmt);
            }
        }
        return brObj;
    }
    private void tableBookData() {
        

        try{
            ResultSet rs;
            DefaultTableModel mod =(DefaultTableModel) tblbookdetails.getModel();
            int rowsCount=getTableRowCount("select count(*) as rowscount from booktable");
            String[] columns = new String[] {
                "Serial No.", "ISBN No.", "Book Name","Author","Publisher","year"
            };
            Object[][] tdata = new Object[rowsCount][6];
            int i=0;
            rs=getTableBookData();
            while(rs.next()){
                tdata[i][0]=rs.getInt("serial");
                tdata[i][1]=rs.getString("isbn");
                tdata[i][2]=rs.getString("bookname");
                tdata[i][3]=rs.getString("author");
                tdata[i][4]=rs.getString("publisher");
                tdata[i][5]=rs.getString("year");
                i++;
            }
            mod.setDataVector(tdata,columns);
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this,"sqlexception in tableData\n"+e);
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(this,"exception in tableData\n"+e);
        }
        
    }

    private ResultSet getTableBookData() {
        Connection con;
        con=Connect.connectDB();
        ResultSet rs=null;
        PreparedStatement pst;
        String sql="select * from booktable";
        try{
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            //con.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, "sqlexception in getTableBookData\n"+e);
        }
        return rs;     
    }
    private void reqDataLoad(ResultSet rs,String ch) throws SQLException {
        String[] columns = new String[] {
                "Req ID","User Id","Serial No.", "ISBN No.", "Book Name","Req Date","Valid From","Valid To","Pending Fine","Paid Fine"
            };
        DefaultTableModel mod =(DefaultTableModel) tblreqbook.getModel();
        
        List<BookRequest> requestList= new ArrayList<>();
        List<BookRequest> reqList = new ArrayList<>();
        if (rs != null) {
            int fineAmountPerDay = 5;
            while (rs.next()) {
                if(ch.equalsIgnoreCase("all")) { 
                    requestList.add(createObjRequestList(rs));
                }
                else if (rs.getString("status").equalsIgnoreCase(ch)){
                    requestList.add(createObjRequestList(rs));                    
                }
            }
        }
        int rowsCount = requestList.size(); 
        Object[][] tdata = new Object[rowsCount][10];
        for(int i=0; i<rowsCount; i++) {
            tdata[i][0] =requestList.get(i).getReqid();
            tdata[i][1] =requestList.get(i).getUserid();
            tdata[i][2] =(requestList.get(i).getSerialNo()==0)?"":requestList.get(i).getSerialNo();
            tdata[i][3] =requestList.get(i).getIsbnNo();
            tdata[i][4] =requestList.get(i).getBookName();
            tdata[i][5] =requestList.get(i).getReqdate();
            tdata[i][6] =requestList.get(i).getValidFrom();
            tdata[i][7] =requestList.get(i).getValidTo();
            tdata[i][8] =requestList.get(i).getFinePending();
            tdata[i][9] =requestList.get(i).getFinePaid();
        }
        mod.setDataVector(tdata, columns);
        tblreqbook.removeColumn(tblreqbook.getColumnModel().getColumn(0));
    }
    public static java.sql.Date addDays(java.sql.Date date, int days) {
        Calendar c = Calendar.getInstance();
        c.setTime(date);
        c.add(Calendar.DATE, days);
        return new java.sql.Date(c.getTimeInMillis());
    }

    private void setStatusKeyMap() {
        
        
        
        statusKeyMap.put("All", "all");
        statusKeyMap.put("Issued", "issued");
        statusKeyMap.put("Expired", "expired");
        statusKeyMap.put("Request Pending", "reqpending");
        statusKeyMap.put("Returned", "returned");
        statusKeyMap.put("Valid To", "validto");
        statusKeyMap.put("Valid From", "validfrom");
        statusKeyMap.put("Return Date", "returndate");
        
    }

    private void setExpiredReq() {
        try{
            Connection con=Connect.connectDB();
            PreparedStatement pst;
            ResultSet rs;
            String sql="select * from reqtable where status='issued'";
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next()){
                if(!rs.getDate("validto").after(new Date(System.currentTimeMillis()))){
                    sql="update reqtable set status='expired' where reqid='"+rs.getString("reqid")+"'";
                    pst=con.prepareStatement(sql);
                    pst.addBatch();
                }
            }
            pst.executeBatch();
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(this, "setExpiredReq()\n"+ex);
        }
    }

    private void createFineStatementData(String dateFilter){
        DefaultTableModel mod =(DefaultTableModel) tblFineStatement.getModel();
        Connection con = Connect.connectDB();
        PreparedStatement pst;
        ResultSet rs ;
        String sql="select reqtable.userid,usertable.fullname,reqtable.bookname,reqtable.isbn,reqtable.serial,reqtable.returndate,reqtable.paidfine from reqtable inner join usertable on reqtable.userid = usertable.userid where (status='returned' or status='renewed') and paidfine > 0"+dateFilter;
        try {
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            rs.last();
            int rowsCount=rs.getRow();
            rs.beforeFirst();
            Object[][] tdata = new Object[rowsCount][7];
            String[] columns = new String[] {
                "User ID","Name", "Book Name", "ISBN No.","Serial No.","Return Date","Paid Fine"
            };
            int i=0;
            while(rs.next()){
                tdata[i][0]=rs.getInt("userid");
                tdata[i][1]=rs.getString("fullname");
                tdata[i][2]=rs.getString("bookname");
                tdata[i][3]=rs.getString("isbn");
                tdata[i][4]=rs.getInt("serial");
                tdata[i][5]=rs.getDate("returndate");
                tdata[i][6]=rs.getInt("paidfine");
                i++;
            }
            mod.setDataVector(tdata, columns);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"createFineStatementData()\n"+ex);
        }      
    }

    private void createExcelFile(String location) {       
        DefaultTableModel mod = (DefaultTableModel) tblFineStatement.getModel();
        int rowCount = tblFineStatement.getModel().getRowCount();
        String[] columns = new String[]{
            "User ID", "Name", "Book Name", "ISBN No.", "Serial No.", "Return Date", "Paid Fine"
        };
        Object[][] tdata = new Object[rowCount][7];
        for (int i = 0; i < rowCount; i++) {
            tdata[i][0] = tblFineStatement.getValueAt(i, 0);
            tdata[i][1] = tblFineStatement.getValueAt(i, 1);
            tdata[i][2] = tblFineStatement.getValueAt(i, 2);
            tdata[i][3] = tblFineStatement.getValueAt(i, 3);
            tdata[i][4] = tblFineStatement.getValueAt(i, 4);
            tdata[i][5] = tblFineStatement.getValueAt(i, 5);
            tdata[i][6] = tblFineStatement.getValueAt(i, 6);
        }
        String fileName="Fine-Statement-"+new Date()+"-"+new Time(System.currentTimeMillis());
        
        labelExportMessage.setForeground(Color.black);
        labelExportMessage.setText("Processing...");
        labelExportMessage.setVisible(true);
        boolean st=ExcelExport.generateFile(tdata, columns, location,fileName);
        if(st){
            labelExportMessage.setForeground(Color.GREEN);
            labelExportMessage.setText("Success");            
        }
        else{
            labelExportMessage.setForeground(Color.RED);
            labelExportMessage.setText("Failed");
            labelExportMessage.setVisible(true);
        }
        Timer timer = new Timer(10000, event -> {
           labelExportMessage.setVisible(false);
        });
        timer.setRepeats(false);
        timer.start();
    }

    private void clearFileSelection() {
        fileChooserGetter.setSelectedFile(null);
    }
}
